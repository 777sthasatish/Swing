/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddRoom.java
 *
 * Created on Sep 24, 2012, 7:49:12 PM
 */
package hotel;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author mike
 */
public class AddRoom extends javax.swing.JDialog implements ActionListener{

    /** Creates new form AddRoom */
    public AddRoom(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadCategories();
        
        btnAdd.addActionListener(this);
        btnClear.addActionListener(this);
        btnExit.addActionListener(this);
        setTitle("Add Room");
        setLocationRelativeTo(null);
    }
    
    private void loadCategories() {
        try {
            Statement stat = DbConnection.getConnection().createStatement();
            ResultSet rs = stat.executeQuery("select * from room_category");
            while (rs.next()) {
                cmbCategory.addItem(rs.getString("category"));  
            }
            stat.close();
        } catch (SQLException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFloor = new javax.swing.JTextField();
        txtRoomID = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        cmbCategory = new javax.swing.JComboBox();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel2.setText("Category");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel3.setText("Room ID");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel5.setText("Floor");

        txtFloor.setColumns(10);
        txtFloor.setFont(new java.awt.Font("Tahoma", 0, 14));

        txtRoomID.setColumns(10);
        txtRoomID.setFont(new java.awt.Font("Tahoma", 0, 14));

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnAdd.setText("Add ");

        btnClear.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnClear.setText("Clear");

        cmbCategory.setFont(new java.awt.Font("Tahoma", 0, 14));

        btnExit.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnExit.setText("Exit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addComponent(jLabel2))
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbCategory, 0, 136, Short.MAX_VALUE)
                    .addComponent(txtRoomID, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(txtFloor, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                .addGap(44, 44, 44))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btnAdd)
                .addGap(37, 37, 37)
                .addComponent(btnClear)
                .addGap(37, 37, 37)
                .addComponent(btnExit)
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRoomID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnExit)
                    .addComponent(btnClear))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JComboBox cmbCategory;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtFloor;
    private javax.swing.JTextField txtRoomID;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
       Object src = e.getSource();
       if (src == btnAdd)
       {
           if (txtRoomID.getText().trim().length() == 0)
            {
                JOptionPane.showMessageDialog(null, "Please Enter Room ID first");
                return;
            }
           if (txtFloor.getText().trim().length() == 0)
           {
               JOptionPane.showMessageDialog(null, "Please Enter Floor number first");
                return;
           }
           if (!txtFloor.getText().matches("[0-9]+"))
           {
               JOptionPane.showMessageDialog(null, "Invalid format (number only)");
               txtFloor.requestFocus();
               return;
           }
            try {
                int flr = Integer.parseInt(txtFloor.getText());
                if (flr <0)
                {
                    JOptionPane.showMessageDialog(null, "Invalid floor number");
                    return;
                }
                else if (flr >5)
                {
                    int ans = JOptionPane.showConfirmDialog(null, "Are you sure "+txtFloor.getText() +" is valid floor number?");
                    if (ans == JOptionPane.OK_OPTION)
                    {
                        
                    }
                    return;
                }
                PreparedStatement stat = DbConnection.getConnection().prepareStatement("select count(*) from room where id = ?");
                stat.setString(1, txtFloor.getText());
                ResultSet rs = stat.executeQuery();
                rs.next();
                if (rs.getInt(1) >= 1)
                {
                    JOptionPane.showMessageDialog(null, "Room ID already exists");
                }
                else
                {
                    
                    stat = DbConnection.getConnection().prepareStatement("insert into room(id,floor,cat_id,status) values (?,?,?,?)");
                    stat.setString(1, txtRoomID.getText().trim());
                    stat.setInt(2, flr);
                    Room r = new Room();
                    int cat_id = r.getCategoryID((String)cmbCategory.getSelectedItem());
                    stat.setInt(3, cat_id);
                    stat.setInt(4, 1);
                    int res = stat.executeUpdate();
                    if (res >=0)
                    {
                        JOptionPane.showMessageDialog(null, "Room added successfully!!!");
                        this.dispose();
                    }
                }
                stat.close();
            } catch (SQLException ex) {
                Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
            }catch(Exception fe){}
       }else if (src == btnClear)
       {
           txtFloor.setText("");
           txtRoomID.setText("");
           cmbCategory.setSelectedIndex(0);
       }
       else if (src == btnExit)
       {
           this.dispose();
       }
    }
}
