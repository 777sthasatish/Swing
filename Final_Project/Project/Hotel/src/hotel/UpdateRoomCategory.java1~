/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UpdateRoomCategory.java
 *
 * Created on Oct 6, 2012, 1:49:00 PM
 */
package hotel;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;

/**
 *
 * @author mike
 */
public class UpdateRoomCategory extends javax.swing.JDialog implements ActionListener {
    
    String oldcat;
    int oldprice, oldbeds,cat_id;

    /** Creates new form UpdateRoomCategory */
    public UpdateRoomCategory(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        btnUpdate.addActionListener(this);
        btnClear.addActionListener(this);
        btnExit.addActionListener(this);
        setTitle("Update Room Category");
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnClear = new javax.swing.JButton();
        txtCategory = new javax.swing.JTextField();
        txtBeds = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnClear.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnClear.setText("Clear");

        txtCategory.setColumns(10);
        txtCategory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtBeds.setColumns(10);
        txtBeds.setFont(new java.awt.Font("Tahoma", 0, 14));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel5.setText("No. of Beds");

        txtPrice.setColumns(10);
        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 14));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnUpdate.setText("Update");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel3.setText("Price");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel2.setText("Category");

        btnExit.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnExit.setText("Exit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(btnUpdate))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtBeds, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClear)
                        .addGap(41, 41, 41)
                        .addComponent(btnExit)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtBeds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnExit)
                    .addComponent(btnClear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtBeds;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables

    public void setValues(int id,String cat, Integer price, int beds) {
        cat_id = id;
        oldcat = cat;
        oldprice = price;
        oldbeds = beds;
        txtCategory.setText(cat);
        txtPrice.setText(String.valueOf(price));
        txtBeds.setText(String.valueOf(beds));
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        Object src = e.getSource();
        if (src == btnClear) {
            txtBeds.setText(String.valueOf(oldbeds));
            txtCategory.setText(oldcat);
            txtPrice.setText(String.valueOf(oldprice));
            
        } else if (src == btnExit)
        {
            this.dispose();
        }
            else if (src == btnUpdate) {
            if (oldcat.equals(txtCategory.getText()) && txtPrice.getText().equals(oldprice + "") && txtBeds.getText().equals(oldbeds + "")) {
                JOptionPane.showMessageDialog(null, "Nothing to update");
                return;
            }
            if (txtCategory.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Please Enter Category first");
                txtPrice.requestFocus();
                return;
            }
            if (txtPrice.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Please Enter Price first");
                txtPrice.requestFocus();
                return;
            }
            if (txtBeds.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Please Enter No of beds first");
                txtBeds.requestFocus();
                return;
            }
            if (!txtPrice.getText().matches("[0-9]+")) {
                JOptionPane.showMessageDialog(null, "Invalid format price(number only)");
                txtPrice.requestFocus();
                return;
            }
            if (!txtBeds.getText().matches("[0-9]+")) {
                JOptionPane.showMessageDialog(null, "Invalid format (number only)");
                txtBeds.requestFocus();
                return;
            }
            try {
                int price = Integer.parseInt(txtPrice.getText());
                int beds = Integer.parseInt(txtBeds.getText());
                if (price < 0) {
                    JOptionPane.showMessageDialog(null, "Invalid Price");
                    return;
                } 
                if (beds <1 || beds > 100) {
                    JOptionPane.showMessageDialog(null, "Invalid No. of beds");
                    return;
                }
                PreparedStatement stat = DbConnection.getConnection().prepareStatement("update room_category set price=?,category=?,num_of_beds=? where cat_id=?");
                stat.setInt(1, price);
                stat.setString(2, txtCategory.getText());
                stat.setInt(3, beds);
                stat.setInt(4, cat_id);
                int res = stat.executeUpdate();
                if (res >= 0) {
                    JOptionPane.showMessageDialog(null, "Room Category updated successfully!!!");
                    this.dispose();
                }
            } catch (Exception ee) {
            }
        }
    }
}
