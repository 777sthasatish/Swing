/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddRoomCategory.java
 *
 * 
 */
package hotel;

import java.awt.event.ActionEvent; 
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author shreee
 */
public class AddRoomCategory extends javax.swing.JDialog implements ActionListener{

    /** Creates new form AddRoomCategory */
    public AddRoomCategory(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        btnAdd.addActionListener(this);
        btnClear.addActionListener(this);
        btnExit.addActionListener(this);
        setTitle("Add Room Category");
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        txtNumOfBeds = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtCategory = new javax.swing.JTextField();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel2.setText("Category");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel3.setText("Price");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel5.setText("No. of Beds");

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnAdd.setText("Add ");

        btnClear.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnClear.setText("Clear");

        txtNumOfBeds.setColumns(10);
        txtNumOfBeds.setFont(new java.awt.Font("Tahoma", 0, 14));

        txtPrice.setColumns(10);
        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 14));

        txtCategory.setColumns(10);
        txtCategory.setFont(new java.awt.Font("Tahoma", 0, 14));

        btnExit.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnExit.setText("Exit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnClear)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit))
                    .addComponent(txtCategory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                    .addComponent(txtNumOfBeds, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumOfBeds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnClear)
                    .addComponent(btnExit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtNumOfBeds;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == btnClear)
        {
            txtCategory.setText("");
            txtPrice.setText("");
            txtNumOfBeds.setText("");
        }
        else if (e.getSource() == btnExit)
        {
            this.dispose();
        }
        else if (e.getSource() == btnAdd)
        {
            if (txtCategory.getText().trim().length()==0)
            {
                JOptionPane.showMessageDialog(null, "Please Enter category first");
                txtCategory.requestFocus();
                return;
            }
            if (txtPrice.getText().trim().length()==0)
            {
                JOptionPane.showMessageDialog(null, "Please Enter price first");
                txtPrice.requestFocus();
                return;
            }
            if (txtNumOfBeds.getText().trim().length()==0)
            {
                JOptionPane.showMessageDialog(null, "Please Enter number of beds first");
                txtNumOfBeds.requestFocus();
                return;
            }
            
            if (!txtPrice.getText().matches("[0-9]+"))
            {
                JOptionPane.showMessageDialog(null, "Invalid price format");
                txtPrice.setText("");
                txtPrice.requestFocus();
                return;
            }
            if (!txtNumOfBeds.getText().matches("[0-9]+"))
            {
                JOptionPane.showMessageDialog(null, "Invalid number format");
                txtNumOfBeds.setText("");
                txtNumOfBeds.requestFocus();
                return;
            }
            if (Integer.parseInt(txtPrice.getText()) ==0)
            {
                JOptionPane.showMessageDialog(null, "Invalid Price");
            }
            try {
                PreparedStatement stat = DbConnection.getConnection().prepareStatement("select count(*) from room_category where category = ?");
                stat.setString(1, txtCategory.getText());
                ResultSet rs = stat.executeQuery();
                rs.next();
                if (rs.getInt(1)>=1)
                {
                    JOptionPane.showMessageDialog(null, "Category already exists");
                }
                else
                {
                    stat = DbConnection.getConnection().prepareStatement("insert into room_category(category,price,num_of_beds) values (?,?,?)");
                    stat.setString(1, txtCategory.getText());
                    stat.setInt(2, Integer.parseInt(txtPrice.getText()));
                    stat.setInt(3, Integer.parseInt(txtNumOfBeds.getText()));
                    int res = stat.executeUpdate();
                    if (res >= 1)
                    {
                        JOptionPane.showMessageDialog(null, "Category added successfully!!!");
                        MyLogger.writeLog("add room category","Category : "+txtCategory.getText()+ " Num of beds : "+txtNumOfBeds.getText()+ " price :"+txtPrice.getText());
                        this.dispose();
                    }
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(AddRoomCategory.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }
}
