/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainWindow.java
 *
 * 
 */
package hotel;

import java.awt.Desktop;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.io.File;
import java.io.RandomAccessFile;
import java.nio.channels.FileLock;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author shreee
 */
public class MainWindow extends javax.swing.JFrame implements ActionListener {

    private JDesktopPane jdesktop = null;

    /** Creates new form MainWindow */
    public MainWindow(String user) {
        initComponents();

        setTitle("Dang Valley - " + user);
        addListeners();
        jdesktop = new JDesktopPane();
        setContentPane(jdesktop);
        menu_admin.setEnabled(false);
        if (user.equalsIgnoreCase("admin")) {
            menu_admin.setEnabled(true);
        }
        Toolkit tk = Toolkit.getDefaultToolkit();
        setSize((int) tk.getScreenSize().getWidth() - 4, (int) tk.getScreenSize().getHeight() - 44);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        m_logout = new javax.swing.JMenuItem();
        m_exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        m_reservationForm = new javax.swing.JMenuItem();
        m_viewRooms = new javax.swing.JMenuItem();
        m_viewDetails = new javax.swing.JMenuItem();
        menu = new javax.swing.JMenu();
        m_guestList = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        m_order = new javax.swing.JMenuItem();
        m_vieworders = new javax.swing.JMenuItem();
        menu_admin = new javax.swing.JMenu();
        m_reservationsummary = new javax.swing.JMenuItem();
        m_viewReport = new javax.swing.JMenuItem();
        m_viewHistory = new javax.swing.JMenu();
        m_reservationHistory = new javax.swing.JMenuItem();
        m_OrderHistory = new javax.swing.JMenuItem();
        m_manage = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        m_manual = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DANG VALLEY HOTEL & RESTURANTS");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(0, 204, 0));

        jMenu1.setText("Account");

        m_logout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_MASK));
        m_logout.setMnemonic('L');
        m_logout.setText("Log out");
        m_logout.setInheritsPopupMenu(true);
        jMenu1.add(m_logout);

        m_exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK));
        m_exit.setText("Exit");
        jMenu1.add(m_exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Reservation");

        m_reservationForm.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        m_reservationForm.setText("Reservation Form");
        jMenu2.add(m_reservationForm);

        m_viewRooms.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK));
        m_viewRooms.setText("View Rooms");
        jMenu2.add(m_viewRooms);

        m_viewDetails.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        m_viewDetails.setText("View Details (checkout)");
        m_viewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_viewDetailsActionPerformed(evt);
            }
        });
        jMenu2.add(m_viewDetails);

        jMenuBar1.add(jMenu2);

        menu.setText("Guest");

        m_guestList.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        m_guestList.setText("List All Guests");
        menu.add(m_guestList);

        jMenuBar1.add(menu);

        jMenu3.setText("Services");

        m_order.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        m_order.setText("Add Order");
        jMenu3.add(m_order);

        m_vieworders.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_MASK));
        m_vieworders.setText("View Orders");
        jMenu3.add(m_vieworders);

        jMenuBar1.add(jMenu3);

        menu_admin.setText("Admin");

        m_reservationsummary.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        m_reservationsummary.setText("Reservation Summary");
        menu_admin.add(m_reservationsummary);

        m_viewReport.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        m_viewReport.setText("View Report");
        menu_admin.add(m_viewReport);

        m_viewHistory.setText("View History");

        m_reservationHistory.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        m_reservationHistory.setText("Reservations");
        m_viewHistory.add(m_reservationHistory);

        m_OrderHistory.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        m_OrderHistory.setText("Orders");
        m_viewHistory.add(m_OrderHistory);

        menu_admin.add(m_viewHistory);

        m_manage.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        m_manage.setText("Manage");
        menu_admin.add(m_manage);

        jMenuBar1.add(menu_admin);

        jMenu4.setText("Help");

        m_manual.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F10, 0));
        m_manual.setText("Manual");
        m_manual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_manualActionPerformed(evt);
            }
        });
        jMenu4.add(m_manual);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 698, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 629, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void m_manualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_manualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m_manualActionPerformed

    private void m_viewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_viewDetailsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m_viewDetailsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem m_OrderHistory;
    private javax.swing.JMenuItem m_exit;
    private javax.swing.JMenuItem m_guestList;
    private javax.swing.JMenuItem m_logout;
    private javax.swing.JMenuItem m_manage;
    private javax.swing.JMenuItem m_manual;
    private javax.swing.JMenuItem m_order;
    private javax.swing.JMenuItem m_reservationForm;
    private javax.swing.JMenuItem m_reservationHistory;
    private javax.swing.JMenuItem m_reservationsummary;
    private javax.swing.JMenuItem m_viewDetails;
    private javax.swing.JMenu m_viewHistory;
    private javax.swing.JMenuItem m_viewReport;
    private javax.swing.JMenuItem m_viewRooms;
    private javax.swing.JMenuItem m_vieworders;
    private javax.swing.JMenu menu;
    private javax.swing.JMenu menu_admin;
    // End of variables declaration//GEN-END:variables

    private void addListeners() {
        m_exit.addActionListener(this);
        m_logout.addActionListener(this);
        m_reservationForm.addActionListener(this);
        m_viewDetails.addActionListener(this);
        m_reservationHistory.addActionListener(this);
        m_OrderHistory.addActionListener(this);
        m_viewReport.addActionListener(this);
        m_viewRooms.addActionListener(this);
        m_order.addActionListener(this);
        m_guestList.addActionListener(this);
        m_vieworders.addActionListener(this);
        m_reservationsummary.addActionListener(this);
        m_manage.addActionListener(this);
        m_manual.addActionListener(this);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        Object src = e.getSource();
        if (src == m_logout) {
            int ans = JOptionPane.showConfirmDialog(null, "Are you sure to log out?", "Log out", JOptionPane.YES_NO_OPTION);
            if (ans == JOptionPane.OK_OPTION) {
                MyLogger.writeLog("logout", "successfull");
                try {
                    RandomAccessFile randomFile = new RandomAccessFile("single.tmp", "rw");
                    FileLock lock = randomFile.getChannel().tryLock();
                    if (lock != null)
                        lock.release();
                } catch (Exception ee) {
                    System.out.println(ee.toString());
                }
                this.dispose();
                new Login().setVisible(true);
            }
        } else if (src == m_exit) {
            int ans = JOptionPane.showConfirmDialog(null, "Are you sure to Exit?", "Exit", JOptionPane.YES_NO_OPTION);
            if (ans == JOptionPane.OK_OPTION) {
                MyLogger.writeLog("logout", "successfull");
                MyLogger.writeLog("EXIT", "System Exit");
                this.dispose();
                System.exit(0);
            }
        } else if (src == m_reservationForm) {
            ReservationForm res_form = new ReservationForm();
            setFrame(res_form);

        } else if (src == m_viewRooms) {
            ViewRooms view_rooms = new ViewRooms();
            setFrame(view_rooms);
        } else if (src == m_viewDetails) {
            ViewDetails vd = new ViewDetails();
            setFrame(vd);
            try {
                vd.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(ViewDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (src == m_order) {
            Order ord = new Order();
            setFrame(ord);
        } else if (src == m_reservationHistory) {
            ReservationHistory his = new ReservationHistory();
            setFrame(his);
            try {
                his.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(ViewDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if (src == m_OrderHistory) {
            OrderHistory orderhis = new OrderHistory();
            setFrame(orderhis);
        } else if (src == m_guestList) {
            GuestList guests = new GuestList();
            setFrame(guests);
        } else if (src == m_vieworders) {
            ViewOrders vieworders = new ViewOrders();
            setFrame(vieworders);
        }
        else if (src == m_viewReport) {
            ReportMenu rmenu = new ReportMenu();
            setFrame(rmenu);
        } else if (src == m_reservationsummary) {
            ViewDetails vd = new ViewDetails();
            setFrame(vd);
            try {
                vd.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(ViewDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (src == m_manage) {
            Manage manage = new Manage();
            setFrame(manage);
        } else if (src == m_manual)
        {
            Desktop desktop = Desktop.getDesktop();
            if (desktop.isSupported(Desktop.Action.OPEN) || desktop.isSupported(Desktop.Action.EDIT)
                    || desktop.isSupported(Desktop.Action.PRINT)) {
                try{
                    desktop.open(new File("manual1.pdf"));
                }
                catch(Exception ex)
                {
                    JOptionPane.showMessageDialog(null, "could not load manual at this time. Please contact the developer.");
                }
            }
        }
    }

    private void setFrame(JInternalFrame internal) {
        jdesktop = new JDesktopPane();
        jdesktop.add(internal);
        this.setContentPane(jdesktop);
    }
}
