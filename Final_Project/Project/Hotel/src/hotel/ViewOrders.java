/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ViewOrders.java
 *
 * 
 */
package hotel;

import java.awt.event.ActionEvent; 
import java.awt.event.ActionListener;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shreee
 */
public class ViewOrders extends javax.swing.JInternalFrame implements ActionListener{

    DefaultTableModel dm;
    TableProperties props;
    /** Creates new form ViewOrders */
    public ViewOrders() {
        super("View All Orders",false,true,false,true);
        dm = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                //Only the third column
                return false;
            }
        };
        initComponents();
        props = new TableProperties(tblOrderHistory, dm);
        props.addColumns(new String[]{"Order ID","Reservation ID","Item Code","Item Name","Quantity","Cost"});
        props.changeColumnProperties(new int[]{80,100,100,100,100,100});
        loadOrders();
        btnPrint.addActionListener(this);
        btnRefresh.addActionListener(this);
        btnExit.addActionListener(this);
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == btnPrint)
        {
            if (dm.getRowCount() ==0)
            {
                int ans = JOptionPane.showConfirmDialog(null, "No Records to Print.\nAre you sure to Print headers only?","Empty Record",JOptionPane.YES_NO_OPTION);
                if (ans == JOptionPane.NO_OPTION)
                    return;   
            }
            try {
                boolean b = tblOrderHistory.print();
                if (b)
                    JOptionPane.showMessageDialog(null, "Print Successfull");
            } catch (PrinterException ex) {
                Logger.getLogger(ViewOrders.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else if (e.getSource() == btnRefresh){
            loadOrders();
        }else if (e.getSource() == btnExit)
        {
            this.dispose();
        }
    }

    public final void loadOrders() {
        dm.setRowCount(0);
       Connection conn = DbConnection.getConnection();
       try
       {
           Statement stat = conn.createStatement();
           ResultSet rs = stat.executeQuery("select * from order_active,item where item.item_code = order_active.item_code order by order_active.order_id");
           while (rs.next())
           {
               dm.addRow(new Object[]{rs.getInt("order_id"),rs.getInt("reservation_id"),rs.getInt("item_code"),rs.getString("name"),rs.getInt("quantity"),rs.getInt("price")* rs.getInt("quantity")});
           }
           if (dm.getRowCount() == 0)
           {
               JOptionPane.showMessageDialog(null, "No Orders Found in the database");
           }
       }catch(Exception e){}
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRefresh = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrderHistory = new javax.swing.JTable();
        btnExit = new javax.swing.JButton();

        btnRefresh.setText("Refresh");

        btnPrint.setText("Print");

        tblOrderHistory.setModel(dm);
        jScrollPane1.setViewportView(tblOrderHistory);

        btnExit.setText("Exit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1135, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(442, 442, 442)
                        .addComponent(btnRefresh)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 669, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrint)
                    .addComponent(btnRefresh)
                    .addComponent(btnExit))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOrderHistory;
    // End of variables declaration//GEN-END:variables
}
