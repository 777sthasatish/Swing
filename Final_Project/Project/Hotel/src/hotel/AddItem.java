
package hotel;

import java.awt.event.ActionEvent; 
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author shreee
 */
public class AddItem extends javax.swing.JDialog implements ActionListener {

    Item item;
    /** Creates new form AddItem */
    public AddItem(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadCategories();
        item = new Item();
        btnAdd.addActionListener(this);
        btnClear.addActionListener(this);
        btnExit.addActionListener(this);
        setTitle("Add Item");
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        cmbCategory = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel2.setText("Category");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel3.setText("Name");

        txtName.setColumns(10);
        txtName.setFont(new java.awt.Font("Tahoma", 0, 14));

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnAdd.setText("Add ");

        btnClear.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnClear.setText("Clear");

        cmbCategory.setFont(new java.awt.Font("Tahoma", 0, 14));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16));
        jLabel4.setText("Price");

        txtPrice.setColumns(10);
        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 14));

        btnExit.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnExit.setText("Exit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdd)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(btnExit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cmbCategory, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnExit)
                    .addComponent(btnClear))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JComboBox cmbCategory;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables

    private void loadCategories() {
        try {
            Statement stat = DbConnection.getConnection().createStatement();
            ResultSet rs = stat.executeQuery("select category from item_category");
            while (rs.next()) {
                cmbCategory.addItem(rs.getString("category"));
            }
            stat.close();
        } catch (SQLException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == btnAdd) {
            if (txtName.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Please Enter Name first");
                return;
            }
            if (txtPrice.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Please Enter Price first");
                return;
            }
            if (!txtPrice.getText().matches("[0-9]+")) {
                JOptionPane.showMessageDialog(null, "Invalid Price format");
                return;
            }
            if (Integer.parseInt(txtPrice.getText()) <= 0) {
                JOptionPane.showMessageDialog(null, "Invalid Price");
                return;
            }
            try {
                int cat_id = item.getCategoryID((String) cmbCategory.getSelectedItem());
                PreparedStatement stat = DbConnection.getConnection().prepareStatement("select count(*) from item where name = ? and cat_id = ?");
                stat.setString(1, txtName.getText());
                stat.setInt(2, cat_id);
                ResultSet rs = stat.executeQuery();
                rs.next();
                if (rs.getInt(1) >= 1) {
                    JOptionPane.showMessageDialog(null, "Item already exists");
                } else {
                    stat = DbConnection.getConnection().prepareStatement("insert into item(name,cat_id,price) values (?,?,?)");
                    stat.setString(1, txtName.getText().trim());
                    stat.setInt(2, cat_id);
                    stat.setInt(3, Integer.parseInt(txtPrice.getText()));
                    int res = stat.executeUpdate();
                    if (res >= 0) {
                        JOptionPane.showMessageDialog(null, "Item added successfully!!!");
                         MyLogger.writeLog("add item","name : "+txtName.getText()+ " price : "+txtPrice.getText()+ " category :"+(String)cmbCategory.getSelectedItem());
                        this.dispose();
                    }
                }
                stat.close();
            } catch (SQLException ex) {
                Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (e.getSource() == btnClear) {
            txtName.setText("");
            cmbCategory.setSelectedIndex(0);
        } else if (e.getSource() == btnExit)
        {
            this.dispose();
        }
    }
}
