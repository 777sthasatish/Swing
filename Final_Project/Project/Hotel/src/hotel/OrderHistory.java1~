/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OrderHistory.java
 *
 * Created on Oct 6, 2012, 4:55:26 PM
 */
package hotel;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mike
 */
public class OrderHistory extends javax.swing.JInternalFrame implements ActionListener{

    DefaultTableModel dm;
    TableProperties props;
    /** Creates new form OrderHistory */
    public OrderHistory() {
        super("Order History",false,true,false,true);
        dm = new DefaultTableModel();
        initComponents();
        props = new TableProperties(tblOrderHistory, dm);
        props.addColumns(new String[]{"Order ID","Item","Quantity","Reservation ID","Guest ID","Guest Name"});
        props.changeColumnProperties(new int[]{100,120,100,100,100,140});
        viewOrderHistory();
        btnExit.addActionListener(this);
        btnPrint.addActionListener(this);
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrderHistory = new javax.swing.JTable();
        btnPrint = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        tblOrderHistory.setModel(dm);
        jScrollPane1.setViewportView(tblOrderHistory);

        btnPrint.setText("Print");

        btnExit.setText("Exit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(361, 361, 361)
                        .addComponent(btnPrint)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrint)
                    .addComponent(btnExit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnPrint;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOrderHistory;
    // End of variables declaration//GEN-END:variables

    private void viewOrderHistory() {
        Connection conn = DbConnection.getConnection();
        try {
            Statement stat = conn.createStatement();
            ResultSet rs = stat.executeQuery("select * from order_history,guest,item where guest.id = order_history.guest_id and order_history.item_code = item.item_code order by order_history.order_id");
            while (rs.next()) {
                    dm.addRow(new Object[]{rs.getInt("order_id"),rs.getString("name"),rs.getInt("quantity"),
                    rs.getString("reservation_id"),rs.getInt("guest.id"),rs.getString("f_name")+" "+rs.getString("l_name")});            }
        } catch (SQLException ex) {
            Logger.getLogger(HistoryAll.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == btnExit)
       {
           this.dispose();
       }
       else if (e.getSource() == btnPrint)
       {
           if (dm.getRowCount() <1)
           {
               JOptionPane.showMessageDialog(null, "Nothing to print");
               return;
           }
            try {
                boolean b = tblOrderHistory.print();
                if (b)
                {
                    JOptionPane.showMessageDialog(null, "Print Succesfull");
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Sorry!!!! Couldn't print table");
                }
            } catch (PrinterException ex) {
                Logger.getLogger(GuestList.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
    }
}
