/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel;

import com.lowagie.text.Chunk;
import com.lowagie.text.Document;
import com.lowagie.text.Element;
import com.lowagie.text.Font;
import com.lowagie.text.FontFactory;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author mike
 */
public class ReportGenerator {

    int RES_ID;
    boolean CHECKED_OUT = false;

    public ReportGenerator(int id, boolean chkout) {
        RES_ID = id;
        CHECKED_OUT = chkout;
    }

    public static void main(String[] args) {
        new ReportGenerator(2, true).generateReport();
    }

    public void generateReport() {
        if (CHECKED_OUT) {
            generateReport1();
        } else {
            generateReport2();
        }
        Desktop desktop = Desktop.getDesktop();
        if (desktop.isSupported(Desktop.Action.OPEN) || desktop.isSupported(Desktop.Action.EDIT)
                || desktop.isSupported(Desktop.Action.PRINT)) {
            try {
                desktop.open(new File("report.pdf"));
            } catch (IOException e1) {
                // TODO Auto-generated catch block
                e1.printStackTrace();
            }
        }
    }

    public void generateReport1() {
        try {
            Document document = new Document(PageSize.A4);
            PdfWriter.getInstance(document, new FileOutputStream("report.pdf"));
            document.open();
            Chunk chunk = new Chunk("Checkout Details");
            chunk.setFont(FontFactory.getFont("Arial"));
            chunk.setUnderline(0.2f, -2f);
            document.add(chunk);
            document.add(new Paragraph("\n"));
            PdfPTable table = new PdfPTable(2);
            table.getDefaultCell().setBorder(0);
            table.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            table.getDefaultCell().setPadding(4.0f);
            table.setHorizontalAlignment(Element.ALIGN_CENTER);

            PreparedStatement stat = DbConnection.getConnection().prepareStatement("select * from reservation_history r, guest g where r.guest_id = g.id and r.reservation_id=?");
            stat.setInt(1, RES_ID);
            ResultSet rs = stat.executeQuery();
            rs.next();
            table.addCell("Reservation ID");
            table.addCell(RES_ID + "");
            table.addCell("Guest Name");
            table.addCell(rs.getString("f_name") + " " + rs.getString("l_name"));
            table.addCell("Address");
            table.addCell(rs.getString("address"));
            table.addCell("Checkin Date");
            table.addCell(rs.getDate("check_in").toString());
            table.addCell("Checkout");
            table.addCell(rs.getDate("check_out").toString());
            table.addCell("Number of Rooms");
            table.addCell(rs.getInt("num_of_rooms") + "");
            document.add(table);
            document.add(new Paragraph("Room Details"));
            document.add(new Paragraph("\n"));
            PdfPTable ptable = new PdfPTable(3);
            ptable.setWidths(new float[]{3.0f,4.0f,3.0f});
            ptable.addCell("Room ID");
            ptable.addCell("Category");
            ptable.addCell("Price");

            String rooms = rs.getString("rooms");
            StringTokenizer st = new StringTokenizer(rooms,",");
            while (st.hasMoreTokens()) {
                String id = st.nextToken();
                System.out.println(id);
                PreparedStatement stat1 = DbConnection.getConnection().prepareStatement("select room_category.category,price from room,room_category where room.cat_id = room_category.cat_id and room.id=?");
                stat1.setString(1, id);
                ResultSet rs1 = stat1.executeQuery();
                rs1.next();
                ptable.addCell(id);
                ptable.addCell(rs1.getString("category"));
                ptable.addCell(rs1.getInt("price")+"");
            }
            document.add(ptable);
            ptable = new PdfPTable(2);
            ptable.addCell("");
            document.add(table);

            document.close();
        } catch (Exception ex) {
            Logger.getLogger(ReportGenerator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void generateReport2() {
        try {
            Document document = new Document(PageSize.A4);
            PdfWriter.getInstance(document, new FileOutputStream("report.pdf"));
            document.open();
            Paragraph p = new Paragraph(" Checkout Details", new Font());
            p.setAlignment(Element.ALIGN_CENTER);
            document.add(p);
            document.add(new Paragraph("\n"));
            PdfPTable table = new PdfPTable(2);
            PdfPCell cell = new PdfPCell(new Paragraph("Rose India"));
            cell.setColspan(2);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(new Color(128, 200, 128));
            cell.setPadding(5.0f);
            table.addCell(cell);
            cell = new PdfPCell(new Paragraph("Name"));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(new Color(255, 200, 0));
            cell.setPadding(5.0f);
            table.addCell(cell);
            cell = new PdfPCell(new Paragraph("Place"));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(new Color(255, 200, 0));
            cell.setPadding(5.0f);
            table.addCell(cell);

            table.addCell("NewsTrack");
            table.addCell("Delhi");
            table.addCell("RoseIndia");
            table.addCell("Delhi");
            document.add(table);

            document.close();
        } catch (Exception ex) {
            Logger.getLogger(ReportGenerator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
